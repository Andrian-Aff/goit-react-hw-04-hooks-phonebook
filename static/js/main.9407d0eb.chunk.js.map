{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/Contacts.module.css","App.module.css"],"names":["module","exports","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","handleChangeName","e","target","value","reset","className","s","form","evt","preventDefault","labelForm","inputForm","type","placeholder","pattern","title","required","onChange","onBlur","find","contact","toLowerCase","alert","btnForm","disabled","ContactList","onDeleteContact","list","map","id","list__item","list__item__tel","button","onClick","proTotypes","PropTypes","array","isRequired","func","Filter","filter","onChangeName","resetFilter","label","input","protoTypes","string","App","JSON","parse","window","localStorage","getItem","phoneContacts","setContacts","setfilter","useEffect","setItem","stringify","container","phonebook","console","log","shortid","generate","prevState","titleContacts","currentTarget","normalizedFilter","toLocaleLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9407d0eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2t7pr\",\"input\":\"Filter_input__3CjB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__IL_uO\",\"labelForm\":\"ContactForm_labelForm__1GYN6\",\"inputForm\":\"ContactForm_inputForm__RbpGl\",\"btnForm\":\"ContactForm_btnForm__3vCT3\"};","  import s from './ContactForm.module.css';\r\n  import PropTypes from 'prop-types';\r\n  import {useState} from 'react';\r\n\r\nexport default function ContactForm({contacts, onSubmit}) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const checkedName = ()=> {\r\n    if (contacts.find(contact => \r\n      contact.name.toLowerCase() === name.toLowerCase()))\r\n      {alert(`${name} is already in contacts.`)\r\n      reset()\r\n      }\r\n  }\r\n\r\n  const handleChangeName = e =>{\r\n    const {name, value} = e.target\r\n    switch (name) {\r\n      case 'name':\r\n          setName(value);\r\n          break;\r\n\r\n      case 'number':\r\n          setNumber(value);\r\n          break;\r\n\r\n      default:\r\n          return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    onSubmit(name, number);\r\n    reset()\r\n  };\r\n\r\n  const reset =()=> {\r\n      setName('');\r\n      setNumber('');\r\n  }\r\n  \r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.labelForm}>Name\r\n        <input className={s.inputForm}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Sara Winters\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          onBlur={checkedName}\r\n        />\r\n      </label>\r\n      <label className={s.labelForm}>Number\r\n        <input className={s.inputForm}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"123-45-67\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChangeName}\r\n          />\r\n        </label>\r\n    \r\n      <button className={s.btnForm} type=\"submit\" disabled={!name}>Add contact</button>\r\n    </form>\r\n     );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n}\r\n","import s from './Contacts.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList =({contacts, onDeleteContact}) => (\r\n    <ul className={s.list}>\r\n        {contacts.map(({id, name, number}) => (\r\n            <li key={id}\r\n            className={s.list__item}>\r\n              {name}:\r\n                <span className={s.list__item__tel}>{number}</span>\r\n            <button className={s.button} onClick={()=>onDeleteContact(id)}>Delete</button>\r\n            </li>\r\n        ))\r\n        }\r\n\r\n    </ul>\r\n)\r\n\r\nContactList.proTotypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({filter, onChangeName, resetFilter})=> (\r\n<label className={s.label}>Find contacts by name \r\n  <input className={s.input}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      placeholder=\"input name/number\"\r\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n    //   title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n      required\r\n      value={filter}\r\n      onChange={onChangeName}\r\n      onBlur={resetFilter}\r\n      />\r\n</label>\r\n)\r\n\r\nFilter.protoTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeName: PropTypes.func,\r\n  onBlur: PropTypes.func\r\n}\r\n\r\nexport default Filter\r\n\r\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport phoneContacts from './components/ContactsList/contacts.json'\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport s from './App.module.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem('contacts')) ?? phoneContacts);\n  const [filter, setfilter] = useState('')\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  const handleChangeName = e =>{\n    const {value} = e.currentTarget\n    setfilter(value)\n  };\n\n  const addContact = (name, number) => {\n   console.log(name, number)\n   const contact = {\n   id: shortid.generate(),\n   name: name,\n   number: number,\n   }\n   setContacts(prevState =>[contact, ...prevState])\n   };\n\n   const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact=> contact.name.toLocaleLowerCase().includes(normalizedFilter)||\n    contact.number.includes(normalizedFilter));\n   }\n\n  const resetFilter = () => {\n    setfilter('')\n  }\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts => contacts.filter(contact=> contact.id !== contactId));\n  }\n\n  return (\n    <div className={s.container}>\n      <div className={s.phonebook}>\n        <h1 className={s.title}>Phonebook</h1>\n        \n        <ContactForm \n        contacts={contacts}\n        onSubmit={addContact}/>\n\n        <h2 className={s.titleContacts}>Contacts</h2>\n        <Filter \n        filter={filter}\n        resetFilter={resetFilter}\n        onChangeName={handleChangeName}\n        />\n        <ContactList \n        contacts={getVisibleContacts()} \n        onDeleteContact={deleteContact}\n        />\n      </div>\n    </div>\n  );\n} \n\n// class App extends Component {\n//   state = {\n//     contacts,\n//     filter: '',\n//   }\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts')\n//     const parseContacts = JSON.parse(contacts);\n//     if (parseContacts) {\n//      this.setState({contacts: parseContacts\n//      })\n//     }\n//   }\n  \n//     componentDidUpdate(prevProps, prevState) {\n//       if(this.state.contacts !== prevState.contacts) {\n//         localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n//       }\n//     }\n    \n\n//   handleChangeName = e =>{\n//     const {name, value} = e.target\n//     this.setState(\n//       {[name]: value})\n//       console.log(e.target.name) \n//   };\n\n//   addContact = ({name, number}) => {\n//    console.log({name, number})\n//    const contact = {\n//    id: shortid.generate(),\n//    name,\n//    number,\n//    }\n//    this.setState(prevState => ({\n//     contacts:[contact, ...prevState.contacts]}))\n//    };\n\n//    getVisibleContacts = () => {\n//     const {contacts, filter} =this.state;\n//     const normalizedFilter = filter.toLocaleLowerCase();\n\n//     return contacts.filter(contact=> contact.name.toLocaleLowerCase().includes(normalizedFilter)||\n//     contact.number.includes(normalizedFilter));\n//    }\n\n//    resetFilter = () => {\n//     this.setState({ filter: '' });\n//   }\n\n//   deleteContact = (contactId) => {\n//     this.setState(({contacts})=> ({\n//       contacts: contacts.filter(contact=> contact.id !== contactId)\n//     }))\n//   };\n\n//   render() {\n//     const {contacts, filter} =this.state;\n   \n//     const visibleContacts =  this.getVisibleContacts()\n//     // const countContacts = contacts.length\n//     return (\n//       <div className={s.container}>\n//         <div className={s.phonebook}>\n//           <h1 className={s.title}>Phonebook</h1>\n          \n//           <ContactForm \n//           contacts={contacts}\n//           onSubmit={this.addContact}/>\n\n//           <h2 className={s.titleContacts}>Contacts</h2>\n//           <Filter \n//           filter={filter}\n//           resetFilter={this.resetFiler}\n//           onChangeName={this.handleChangeName}\n//           />\n//           <ContactList \n//           contacts={visibleContacts} \n//           onDeleteContact={this.deleteContact}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3aXsA\",\"list__item\":\"Contacts_list__item__1h_2q\",\"list__item__tel\":\"Contacts_list__item__tel__1TAHN\",\"button\":\"Contacts_button__1O6Ro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__31ens\",\"title\":\"App_title__2nbkm\",\"titleContacts\":\"App_titleContacts__2c-2a\",\"phonebook\":\"App_phonebook__C-Isu\"};"],"sourceRoot":""}